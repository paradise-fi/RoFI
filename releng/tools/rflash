#!/usr/bin/env python3

import sys
import os
import subprocess
from common import *

def flashEsp32Image(img, extra):
    command = [
        "esptool.py",
        "--chip", "esp32",
        "--before=default_reset",
        "--after=hard_reset",
        "write_flash",
        "--flash_mode", "dio",
        "--flash_freq", "40m"]
    command += extra
    command += [
        "0x8000", os.path.join(buildDir, img.suite, "partition_table", "partition-table.bin"),
        "0x1000", os.path.join(buildDir, img.suite, "bootloader", "bootloader.bin"),
        "0x10000", img.path]
    print(f"Flashing image {img.name} from {img.suite}: {img.path}")
    retcode = subprocess.call(command)
    return retcode

def run():
    if len(sys.argv) < 2 or (len(sys.argv) >= 3 and sys.argv[2] != "--"):
        sys.exit(
            "Invalid usage!\n\n"
            "Invoke as rflash <name_of_image> -- <extra_flash_parameters>...\n"
        )
    extraArgs = sys.argv[3:]
    imgs = collectImages()
    try:
        img = imgs[sys.argv[1]]
    except KeyError:
        sys.exit(f"Unknown image {sys.argv[1]}")
    if img.suite == "rofiFirmware":
        retcode = flashEsp32Image(img, extraArgs)
        sys.exit(retcode)
    else:
        sys.exit(f"Unsupported platform {img[0]}")

if __name__ == "__main__":
    run()
