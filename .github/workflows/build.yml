name: "Build & test"
on:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * *'
jobs:
  build_desktop:
    name: "Build suite desktop"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        environment: [Debug, Release]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build desktop
        uses: addnab/docker-run-action@v2
        with:
          image: yaqwsx/rofi.desktop
          shell: bash
          options: -v ${{ github.workspace }}:/work -w /work
          run: |
            source setup.sh ${{ matrix.environment }}
            rcfg desktop
            rmake desktop
      - name: Run tests
        uses: addnab/docker-run-action@v2
        with:
          image: yaqwsx/rofi.desktop
          shell: bash
          options: -v ${{ github.workspace }}:/work -w /work
          run: |
            source setup.sh ${{ matrix.environment }}
            rmake --test --all
  build_rofiFirmware:
    name: "Build suite rofiFirmware"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        environment: [Debug, Release]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build RoFI firmware
        uses: addnab/docker-run-action@v2
        with:
          image: yaqwsx/rofi.desktop
          shell: bash
          options: -v ${{ github.workspace }}:/work -w /work
          run: |
            source setup.sh -i ${{ matrix.environment }}

            # Provide secrets
            export ROFI_SSID="N/A"
            export ROFI_WIFI_PASS=""
            export ROFI_WLAN_USER=""
            export RoFI_WLAN_PASS=""

            # Configure and build
            rcfg rofiFirmware
            # ESP-IDF has a bug with Ninja - ld script is built too late, so
            # let's build it first so we don't miss the dependency.
            (cd build.${{ matrix.environment }}/rofiFirmware && ninja esp-idf/esp32/ld/esp32.project.ld)
            rmake rofiFirmware
  build_doc:
    name: "Build documentation"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            cmake make git doxygen graphviz
          sudo pip3 install sphinx==4.0.3 breathe sphinx-rtd-theme recommonmark
      - name: "Build"
        run: |
          source setup.sh Debug
          rcfg doc
          rmake doc
      - name: Build other branches
        if: github.ref == 'refs/heads/master'
        run: |
          source setup.sh Debug
          # Fetch all branches
          git fetch --all
          git pull --all
          releng/doc/buildAllBranches.sh
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: build.Debug/doc/web
          retention-days: 14
  deploy:
    name: "Deploy documentation"
    runs-on: ubuntu-20.04
    needs: build_doc
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout # Required for GH-pages deployment
        uses: actions/checkout@v2
      - name: "Download web"
        uses: actions/download-artifact@v2
        with:
          name: documentation
          path: documentation
      - run: ls documentation
      - name: Deploy to GH Pages
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: documentation
          single-commit: true
